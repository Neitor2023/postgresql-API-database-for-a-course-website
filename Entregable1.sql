CREATE TABLE "users" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "rol_id" int NOT NULL,
  "name_user" varchar(30),
  "email" varchar(30),
  "password" varchar(30),
  "age" int
);

CREATE TABLE "roles" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name_rol" varchar(30)
);

CREATE TABLE "coursevideo" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "title_course" varchar(30),
  "url" text
);

CREATE TABLE "levels" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name_lev" varchar(30)
);

CREATE TABLE "courses" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "teacher_id" int NOT NULL,
  "level_id" int NOT NULL,
  "admin_id" int NOT NULL,
  "title_course" varchar(30),
  "description" text
);

CREATE TABLE "categories" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name_cat" varchar(30)
);

CREATE TABLE "course_video" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "course_id" int NOT NULL,
  "coursevideo_id" int NOT NULL
);

CREATE TABLE "course_categories" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "course_id" int NOT NULL,
  "category_id" int NOT NULL
);

CREATE TABLE "course_students" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "course_id" int NOT NULL,
  "student_id" int NOT NULL
);

ALTER TABLE "courses" ADD FOREIGN KEY ("teacher_id") REFERENCES "users" ("id");

ALTER TABLE "course_video" ADD FOREIGN KEY ("coursevideo_id") REFERENCES "coursevideo" ("id");

ALTER TABLE "course_video" ADD FOREIGN KEY ("course_id") REFERENCES "courses" ("id");

ALTER TABLE "course_categories" ADD FOREIGN KEY ("course_id") REFERENCES "courses" ("id");

ALTER TABLE "course_categories" ADD FOREIGN KEY ("category_id") REFERENCES "categories" ("id");

ALTER TABLE "course_students" ADD FOREIGN KEY ("course_id") REFERENCES "courses" ("id");

ALTER TABLE "course_students" ADD FOREIGN KEY ("student_id") REFERENCES "users" ("id");

ALTER TABLE "users" ADD FOREIGN KEY ("rol_id") REFERENCES "roles" ("id");

ALTER TABLE "courses" ADD FOREIGN KEY ("admin_id") REFERENCES "users" ("id");

ALTER TABLE "courses" ADD FOREIGN KEY ("level_id") REFERENCES "levels" ("id");

INSERT INTO levels (name_lev) VALUES ('Beginner'),('Media'),('Advanced');

INSERT INTO roles (name_rol) VALUES ('Student'),('Teacher'),('Administrator'); 

INSERT INTO users (rol_id,name_user,email,password,age) VALUES (1,'Carlos Perez','carlos@gmail.com','123456',23),(1,'Fran Suare','fran@gmail.com','01030',25),(1,'Luis Garcia','luis@gmail.com','901023',30),(1,'Alejandra Guzman','alejandra@gmail.com','597236',26),(2,'Juan Molina','juan@gmail.com','589315',37),(2,'Alfredo Molina','alfredo@gmail.com','257651',40),(3,'Norma Gutierrez','fran@gmail.com','258555',45);

INSERT INTO courses (teacher_id, level_id, admin_id, title_course, description) VALUES (2,1,3,'Javascrip','programming language for making web pages interactive'),(3,2,3,'Nodejv','Node.js is a JavaScript runtime environment');

INSERT INTO course_students (course_id, student_id) VALUES (1,1),(1,2),(2,3),(2,4);

INSERT INTO categories (name_cat) VALUES ('Frontend'),('Backend');

INSERT INTO coursevideo (title_course, url) VALUES ('javascript from scratch','https://www.youtube.com/watch?v=z95mZVUcJ-E'),('javascript from scratch','https://www.youtube.com/watch?v=ivdTnPl1ND0'),('node js crud','https://www.youtube.com/watch?v=VuMSq68h-H4'),('node js crud','https://www.youtube.com/watch?v=1LkmqA2BCxA');

INSERT INTO course_video (course_id, coursevideo_id) VALUES (1,1),(1,2),(2,3),(2,4);

INSERT INTO course_categories (course_id, category_id) VALUES (1,1),(2,2);

SELECT a.name_user, b.name_user, name_lev, name_cat, title_course, description, c.name_user FROM courses INNER JOIN users a ON courses.admin_id=a.id JOIN users b ON courses.teacher_id=b.id JOIN levels ON courses.level_id=levels.id JOIN course_categories ON courses.id=course_categories.course_id JOIN categories ON course_categories.category_id = categories.id JOIN course_students ON courses.id = course_students.course_id JOIN users c ON course_students.student_id=c.id;
